# see https://www.overleaf.com/learn/latex/Bibliography_management_with_bibtex
@misc{copyright-law-italia,
  author  = {Gazzetta Ufficiale},
  url     = {http://www.normattiva.it/uri-res/N2Ls?urn:nir:stato:legge:1941-04-22;633},
  title   = {Protezione del diritto d'autore e di altri diritti connessi al suo esercizio. (041U0633)},
}

@misc{britannica,
  author  = {Encyclopedia Britannica},
  url     = {https://www.britannica.com/topic/plagiarism.},
  title   = {plagiarism.},
  year    = {September 23, 2022},
}

@INPROCEEDINGS{cpdp,
  author={Muddu, Basavaraju and Asadullah, Allahbaksh and Bhat, Vasudev},
  booktitle={2013 7th International Workshop on Software Clones (IWSC)}, 
  title={CPDP: A robust technique for plagiarism detection in source code}, 
  year={2013},
  volume={},
  number={},
  pages={39-45},
  doi={10.1109/IWSC.2013.6613041},
}

@article{joy-99,
  author={Joy, M. and Luck, M.},
  journal={IEEE Transactions on Education}, 
  title={Plagiarism in programming assignments}, 
  year={1999},
  volume={42},
  number={2},
  pages={129-133},
  doi={10.1109/13.762946},
}

@article{faidhi-robinson-1987,
  title = {An empirical approach for detecting program similarity and plagiarism within a university programming environment},
  journal = {Computers \& Education},
  volume = {11},
  number = {1},
  pages = {11-19},
  year = {1987},
  issn = {0360-1315},
  doi = {https://doi.org/10.1016/0360-1315(87)90042-X},
  url = {https://www.sciencedirect.com/science/article/pii/036013158790042X},
  author = {J.A.W. Faidhi and S.K. Robinson},
  abstract = {Several studies that examine the detection of plagiarism in a given programming environment have recently appeared in the literature. In most cases, these studies have found support for certain metrics, related to program structure, as indicative of similarity or plagiarism. In the research described in this paper, a broader analysis of program similarity and plagiarism is reported. The plagiarism detection system developed is shown to be more sensitive than those previously reported in the literature.}
}

@article{yalcin-et-al-2022,
  title = {An external plagiarism detection system based on part-of-speech (POS) tag n-grams and word embedding},
  journal = {Expert Systems with Applications},
  volume = {197},
  pages = {116677},
  year = {2022},
  issn = {0957-4174},
  doi = {https://doi.org/10.1016/j.eswa.2022.116677},
  url = {https://www.sciencedirect.com/science/article/pii/S0957417422001610},
  author = {Kadir Yalcin and Ilyas Cicekli and Gonenc Ercan},
  keywords = {Plagiarism detection, part-of-speech (POS) tagging, N-grams, Semantic similarity, Word embedding},
  abstract = {The aim of this paper is to present an automatic plagiarism detection system to identify plagiarized passages of documents. Our plagiarism detection system uses both syntactic and semantic similarities to identify plagiarized passages. Our proposed method is a novel contribution because of its usage of part-of-speech tag n-grams (POSNG) which are able to show syntactic similarities between source and suspicious sentences. Each source document is indexed according to part-of-speech (POS) tag n-grams by a search engine in order to access rapidly to sentences that are possible plagiarism candidates. Even though our plagiarism detection system obtains very good results just using POS tag n-grams, its performance is further improved with the usage of semantic similarities. The semantic relatedness between words is measured with the word embedding technique called Word2Vec and the longest common subsequence approach is used to measure the semantic similarity between source and suspicious sentences. There are several types of plagiarism such as verbatim, paraphrasing, source-code, and cross-lingual. The high obfuscation paraphrasing is a type of plagiarism and its detection is one of the most difficult plagiarism detection tasks. Our proposed method, which is based on POS tag n-grams, improves the detection performance of the high obfuscation paraphrasing type and is the main contribution of this paper. For this study, we use the large dataset called PAN-PC-11 which is created for the evaluation of automatic plagiarism detection algorithms. Our experiments are conducted with the four types of paraphrasing in PAN-PC-11 which are none, low, high and simulated obfuscation paraphrasing types. We defined various threshold and parameter settings in order to assess the diversity of our results. We compared the performance of our method with the plagiarism detectors in the 3rd International Competition on Plagiarism Detection (PAN11). According to the experimental results, the proposed method achieved the best performance in terms of plagdet measure in the types of high and low obfuscation paraphrasing and produced competitive results in the other paraphrasing types.}
}

@article{duracik-krsak-hrkut-2017,
  title = {Current Trends in Source Code Analysis, Plagiarism Detection and Issues of Analysis Big Datasets},
  journal = {Procedia Engineering},
  volume = {192},
  pages = {136-141},
  year = {2017},
  note = {12th international scientific conference of young scientists on sustainable, modern and safe transport},
  issn = {1877-7058},
  doi = {https://doi.org/10.1016/j.proeng.2017.06.024},
  url = {https://www.sciencedirect.com/science/article/pii/S1877705817325705},
  author = {Michal Ďuračík and Emil Kršák and Patrik Hrkút},
  keywords = {source code analysis, plagiarism, current trends, transport, optimizations},
  abstract = {In this work, we analyze the state of the art in source code analysis area with a focus on plagiarism detection and provide a proposal for a future work in this area. Detection of plagiarism combines the detection of clones and methods for determining similarity. Nowadays, there are several approaches that can be divided into three levels. The first one is text based and uses plain text as an input. The second level is token based. The top level is model based and uses models to represent source code. These advanced algorithms (token and model based) can’t work with large datasets. We believe the future belongs to the algorithms that will be able to handle large amount of source code. These algorithms should use one of model-based representations. They can be used for formation of large-scale anti-plagiarism systems. They can be used also in the area of source code optimization.},
}

@article{ottenstein,
  title={An algorithmic approach to the detection and prevention of plagiarism},
  author={Ottenstein, Karl J},
  journal={ACM Sigcse Bulletin},
  volume={8},
  number={4},
  pages={30--41},
  year={1976},
  publisher={ACM New York, NY, USA}
}

@book{halstead,
  author = {Halstead, Maurice H.},
  title = {Elements of Software Science (Operating and Programming Systems Series)},
  year = {1977},
  isbn = {0444002057},
  publisher = {Elsevier Science Inc.},
  address = {USA}
}

@article{es-plag,
  author = {Sulistiani, Lisan and Karnalim, Oscar},
  title = {ES-Plag: Efficient and sensitive source code plagiarism detection tool for academic environment},
  journal = {Computer Applications in Engineering Education},
  volume = {27},
  number = {1},
  pages = {166-182},
  keywords = {computing education, cosine similarity, programming, running-karp-rabin greedy-string-tiling, source code plagiarism},
  doi = {https://doi.org/10.1002/cae.22066},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cae.22066},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cae.22066},
  abstract = {Abstract Source code plagiarism detection using Running-Karp-Rabin Greedy-String-Tiling (RKRGST) is a common practice in academic environment. However, such approach is time-inefficient (due to RKRGST's cubic time complexity) and insensitive (toward token subsequence rearrangement). This paper proposes ES-Plag, a plagiarism detection tool featured with cosine-based filtering and penalty mechanism to handle aforementioned issues. Cosine-based filtering mitigates time-inefficiency by excluding non-potential pairs from RKRGST comparison; while penalty mechanism mitigates insensitivity by reducing the number of matched tokens with the number of matched subsequences prior similarity normalization. In addition to issue-solving features, ES-Plag is also featured with project-based input, colorized adjacency similarity matrix, matched token highlighting, and various similarity algorithms (e.g., Cosine Similarity and Local Alignment). Three findings can be deducted from our evaluation. First, cosine-based filtering boosts up time efficiency with a trade-off in effectiveness. Second, penalty mechanism enhances sensitivity even though its improvement in terms of effectiveness is quite limited. Third, ES-Plag's features are beneficial for examiners.},
  year = {2019}
}

@article{pdectet,
  author = {Moussiades, Lefteris and Vakali, Athena},
  title = "{PDetect: A Clustering Approach for Detecting Plagiarism in Source Code Datasets}",
  journal = {The Computer Journal},
  volume = {48},
  number = {6},
  pages = {651-661},
  year = {2005},
  month = {06},
  abstract = "{Efficient detection of plagiarism in programming assignments of students is of a great importance to the educational procedure. This paper presents a clustering oriented approach for facing the problem of source code plagiarism. The implemented software, called PDetect, accepts as input a set of program sources and extracts subsets (the clusters of plagiarism) such that each program within a particular subset has been derived from the same original. PDetect proposes the use of an appropriate measure for evaluating plagiarism detection performance and supports the idea of combining different plagiarism detection schemes. Furthermore, a cluster analysis is performed in order to provide information beneficial to the plagiarism detection process. PDetect is designed such that it may be easily adapted over any keyword-based programming language and it is quite beneficial when compared with earlier (state-of-the-art) plagiarism detection approaches.}",
  issn = {0010-4620},
  doi = {10.1093/comjnl/bxh119},
  url = {https://doi.org/10.1093/comjnl/bxh119},
  eprint = {https://academic.oup.com/comjnl/article-pdf/48/6/651/1025682/bxh119.pdf},
}

@article{karnalim-budi-toba-joy-2019,
  author = {Oscar KARNALIM and Setia BUDI and Hapnes TOBA and Mike JOY},
  title = {Source Code Plagiarism Detection in Academia with Information Retrieval: Dataset and the Observation},
  journal = {Informatics in Education},
  volume = {18},
  number = {2},
  year = {2019},
  pages = {321--344},
  doi = {10.15388/infedu.2019.15},
  issn = {1648-5831},
  publisher = {Vilnius University Institute of Data Science and Digital Technologies},
}
